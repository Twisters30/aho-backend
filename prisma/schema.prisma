// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  address    String
  contacts   Contact[]
  orders     Order[]
  role       Role      @default(USER)
  roleId     Int
  password   String
  creaatedAt DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Contact {
  id           Int     @id @default(autoincrement())
  name         String
  middleName   String?
  surname      String?
  phone        String
  isSupervisor Boolean
  employee     User    @relation(fields: [employeeId], references: [id])
  employeeId   Int
}

model ServiceType {
  id      Int       @id @default(autoincrement())
  name    String
  service Service[]
}

model Service {
  id            Int         @id @default(autoincrement())
  name          String
  size          String?
  quantity      Int
  quantityType  String
  typeService   ServiceType @relation(fields: [serviceTypeId], references: [id])
  serviceTypeId Int
  order         Order       @relation(fields: [orderId], references: [id])
  orderId       Int
}

model Order {
  id         Int         @id @default(autoincrement())
  User       User        @relation(fields: [userId], references: [id])
  userId     Int
  typeOrder  String
  service    Service[]
  comments   String?
  status     OrderStatus @default(NEW)
  creaatedAt DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  NEW
  IN_WORKING
  CLOSED
}
